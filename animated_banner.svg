<?xml version="1.0" encoding="UTF-8"?>
<!-- Animated SVG banner for GitHub README
     File: animated_banner.svg
     Usage: Put this file in your repo and include in README.md with:
       ![Banner](./animated_banner.svg)
-->
<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="220" viewBox="0 0 1000 220" preserveAspectRatio="xMidYMid meet">
  <defs>
    <linearGradient id="g1" x1="0" x2="1">
      <stop offset="0%" stop-color="#001100"/>
      <stop offset="35%" stop-color="#001a00"/>
      <stop offset="100%" stop-color="#000000"/>
    </linearGradient>

    <linearGradient id="neon" x1="0" x2="1">
      <stop offset="0%" stop-color="#22ff6b" stop-opacity="0.95"/>
      <stop offset="50%" stop-color="#9cffb4" stop-opacity="0.9"/>
      <stop offset="100%" stop-color="#22ff6b" stop-opacity="0.95"/>
    </linearGradient>

    <filter id="blurGlow" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur stdDeviation="3" result="b"/>
      <feMerge>
        <feMergeNode in="b"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>

    <!-- small scanline pattern -->
    <pattern id="scan" width="4" height="4" patternUnits="userSpaceOnUse">
      <rect width="4" height="2" y="0" fill="#002200"/>
      <rect width="4" height="2" y="2" fill="rgba(0,0,0,0)"/>
    </pattern>

    <!-- monospaced font fallback -->
    <style type="text/css"><![CDATA[
      @import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');
      .bg { fill: url(#g1); }
      .scan { fill: url(#scan); opacity:0.25; }
      .matrix { fill: #003300; font-family: 'Share Tech Mono', monospace; font-size:18px; opacity:0.55; }
      .title { font-family: 'Share Tech Mono', monospace; font-size:34px; font-weight:700; fill: url(#neon); filter: url(#blurGlow); }
      .title-soft { font-size:34px; fill:#22ff6b; opacity:0.55; }
      .sub { font-family: 'Share Tech Mono', monospace; font-size:16px; fill:#9cffb4; opacity:0.9; }
      .glitch { fill:#0aff6a; mix-blend-mode:screen; }
      .pulse { animation: pulse 2.4s infinite; }

      @keyframes pulse {
        0% { opacity:0.9; transform: translateZ(0); }
        50% { opacity:1; }
        100% { opacity:0.9; }
      }

      .scanlineMove { animation: scanline 3s linear infinite; }
      @keyframes scanline { from { transform: translateY(-10px);} to { transform: translateY(10px);} }

      /* glitch layers movement */
      .g1 { animation: glitch1 3s infinite linear; }
      .g2 { animation: glitch2 2.6s infinite linear; }
      @keyframes glitch1 { 0%{transform:translate(0,0)} 20%{transform:translate(-2px,0)} 40%{transform:translate(2px,0)} 60%{transform:translate(-1px,0)} 80%{transform:translate(1px,0)} 100%{transform:translate(0,0)} }
      @keyframes glitch2 { 0%{transform:translate(0,0)} 25%{transform:translate(1px,0)} 50%{transform:translate(-1px,0)} 75%{transform:translate(2px,0)} 100%{transform:translate(0,0)} }

      .small-fade { opacity:0.9; animation: flicker 4s linear infinite; }
      @keyframes flicker { 0%{opacity:0.9} 3%{opacity:0.3} 6%{opacity:0.95} 100%{opacity:0.9} }
    ]]></style>
  </defs>

  <!-- background -->
  <rect width="100%" height="100%" class="bg"/>

  <!-- subtle matrix rain columns (repeated) -->
  <g transform="translate(20,10)" opacity="0.55">
    <g class="matrix">
      <!-- repeated columns using <g> duplication -->
      <g transform="translate(0,0)">
        <text x="0" y="0">01001010 01101000 01100001</text>
      </g>
      <g transform="translate(120,20)">
        <text x="0" y="0">10100111 11010010 01000101</text>
      </g>
      <g transform="translate(240,10)">
        <text x="0" y="0">00110101 01110010 10011010</text>
      </g>
      <g transform="translate(360,30)">
        <text x="0" y="0">11001101 00010101 01010110</text>
      </g>
      <g transform="translate(480,10)">
        <text x="0" y="0">01100011 10101010 00110011</text>
      </g>
      <g transform="translate(600,25)">
        <text x="0" y="0">10010101 11100010 01001101</text>
      </g>
      <g transform="translate(720,15)">
        <text x="0" y="0">01011100 00110010 11001010</text>
      </g>
      <g transform="translate(840,5)">
        <text x="0" y="0">11100011 01001001 00111010</text>
      </g>
    </g>
  </g>

  <!-- moving faint scan overlay -->
  <rect x="0" y="0" width="100%" height="100%" class="scan scanlineMove"/>

  <!-- main title group with glitch layers -->
  <g transform="translate(40,110)">
    <!-- soft shadow copy -->
    <text class="title g1" x="0" y="0">Full-Stack | Cybersecurity | React | TypeScript</text>
    <!-- slight offset green layer -->
    <text class="title g2" x="2" y="4" style="fill:rgba(0,255,120,0.45)">Full-Stack | Cybersecurity | React | TypeScript</text>
    <!-- sharp front layer -->
    <text class="title" x="0" y="0">Full-Stack | Cybersecurity | React | TypeScript</text>

    <!-- small subtitle -->
    <g transform="translate(0,34)">
      <text class="sub small-fade" x="0" y="0">Khalid (HackSpecter) — Full-Stack Developer · Threat Analyst</text>
    </g>
  </g>

  <!-- animated blinking cursor to mimic terminal -->
  <g transform="translate(780,98)">
    <rect width="6" height="26" fill="#22ff6b" class="pulse" />
  </g>

  <!-- border with pulsing neon corners -->
  <g>
    <rect x="6" y="6" width="988" height="208" rx="14" ry="14" fill="none" stroke="#003300" stroke-width="2" opacity="0.6"/>
    <rect x="2" y="2" width="996" height="216" rx="18" ry="18" fill="none" stroke="url(#neon)" stroke-width="1.5" opacity="0.08" filter="url(#blurGlow)"/>
  </g>

  <!-- small hacking glyphs that float -->
  <g fill="#0aff6a" font-family="Share Tech Mono, monospace" font-size="12" opacity="0.6">
    <text x="880" y="30" class="g2">{init()</text>
    <text x="900" y="50" class="g1">&lt;sys&gt;</text>
    <text x="760" y="28" class="g2">0xDEADBEEF</text>
    <text x="820" y="62" class="g1">sudo — run</text>
  </g>

  <!-- subtle bottom noise to make it feel alive -->
  <rect x="0" y="178" width="1000" height="30" fill="#001a00" opacity="0.35" />

  <!-- accessibility: title & desc -->
  <title>Animated banner — Full-Stack | Cybersecurity | React | TypeScript — Khalid (HackSpecter)</title>
  <desc>Neon hacker-style animated banner that fits GitHub README. Drop file into repo and embed with Markdown: ![Banner](./animated_banner.svg)</desc>
</svg>
